CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C     HND8 : MP2 FORTRAN
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE WFNMP2
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/OPTNS/TIMLIM,VIBSIZ,NOPT,NVIB,IREST2,IREST3,
     &            LADAPT,LSKIP,NPRINT,ITOL,ICUT,NORMF,NORMP,
     &            IREST,NREC,INTLOC,IST,JST,KST,LST,IR,IW,
     &            IBLKD,IFILD,IBLKS,IFILS,IBLKM,IFILM,MBLKM,
     &            NOTAPE(3),IBLK(3),LBLK(3),ILOW,NCOORB,NSA,
     &            MINVEC,DIISE,DIISD,MINULL,
     &            ICONV,NRUNS,NMUL(2),IPOSM,LDA(24),ISEX(24),
     &            TTOT1
      COMMON/SQFILE/IJK,IPK
      COMMON/DAFILE/IDAF,NAV,IODA(255)
      COMMON/INTOPT/NOPK,NOK,NOSQUR
      COMMON/INTFIL/NINTMX
      COMMON/ENRGHF/ENUC,ESCF,EELEC
      COMMON/ENRGMP/EMP2,EMP3,EMP4
      COMMON/FUNCT/E,EG(384)
      COMMON/INFOA/NAT,ICH,MUL,NUM,NX,NE,NA,NB,ZAN(NATM1),C(3,NATM1)
      DIMENSION ARRAY(5)
      DATA PT5,ONE /0.5D+00,1.0D+00/

C     ----- SET UP -MP- RUN -----

      CALL MP2SET

C     ----- EVALUATE -MP2- ENERGIES -----

      CALL MP2NRG

      E=EMP2

C     ----- SAVE -MP2- ENERGY DATA ON -DAF- -----

      SZ=PT5*DFLOAT(MUL-1)
      S2=SZ*(SZ+ONE)
      ARRAY(1)=ENUC
      ARRAY(2)=ESCF
      ARRAY(3)=EMP2
      ARRAY(4)=SZ
      ARRAY(5)=S2
      CALL DAWRIT(IDAF,IODA,ARRAY,5,2,NAV)

      ICALL=1
      CALL TEXIT(ICALL,ICALL)
      RETURN
      END

      SUBROUTINE MP2SET

c     Setting up MP2 run

      IMPLICIT REAL*8 (A-H,O-Z)
      LOGICAL SOME,OUT,DBUG
      COMMON/OUTPUT/NPRINT
      COMMON/OPTNS/TIMLIM,VIBSIZ,NOPT,NVIB,IREST2,IREST3,
     &            LADAPT,LSKIP,NPRINT,ITOL,ICUT,NORMF,NORMP,
     &            IREST,NREC,INTLOC,IST,JST,KST,LST,IR,IW,
     &            IBLKD,IFILD,IBLKS,IFILS,IBLKM,IFILM,MBLKM,
     &            NOTAPE(3),IBLK(3),LBLK(3),ILOW,NCOORB,NSA,
     &            MINVEC,DIISE,DIISD,MINULL,
     &            ICONV,NRUNS,NMUL(2),IPOSM,LDA(24),ISEX(24),
     &            TTOT1
      COMMON/SQFILE/IJK,IPK
      COMMON/DAFILE/IDAF,NAV,IODA(255)
      COMMON/MEMORY/MAXCOR,MAXLCM
      COMMON/INTOPT/NOPK,NOK,NOSQUR
      COMMON/INTFIL/NINTMX
      COMMON/INFOA/NAT,ICH,MUL,NUM,NX,NE,NA,NB,ZAN(NATM1),C(3,NATM1)
      COMMON/MP2PAR/NCO,NOA,NOB,NO,NBF
      COMMON/MP2MEM/NWRDS
      COMMON/MP2PRT/SOME,OUT,DBUG
      COMMON/QMTOPT/TOLQMT,NQMT
      DIMENSION ERRMSG(3)
      DATA ERRMSG /'PROGRAM ','STOP IN ','-MP2SET-'/
      DATA NWORD  /0/
      DATA NPFLG  /0/
C
      NAMELIST /MP2/ NORB,NCORB,NWORD,NPFLG
C
      IF(NOPK.EQ.1) GO TO 10
      WRITE(IW,9999)
      CALL HNDERR(3,ERRMSG)
   10 CONTINUE
C
      NWRDS =MAXCOR
      NCORB =0
      NORB  =NQMT
      NOA   =NA
      NOB   =NB
      NBF   =NUM
C
C     ----- READ NAMELIST -$MP2- -----
C
      REWIND IR
      READ(IR,MP2,END=20)
   20 CONTINUE
      IF(NWORD.NE.0) NWRDS=MIN0(MAXCOR,NWORD)
C
      NCO=NCORB
      NO =NORB
      IF(NORB.GT.NOA) GO TO 30
      WRITE(IW,9996)
      CALL HNDERR(3,ERRMSG)
   30 CONTINUE
C
      SOME=NPRINT.NE.-5
      OUT =NPFLG.GE.1
      DBUG=NPFLG.GE.2
C
      WRITE(IW,9998)
      WRITE(IW,9997) NCORB,NOA,NOB,NORB,NBF
C
      RETURN
 9999 FORMAT(' FOR -MP2- , THE INTEGRALS MAY NOT BE IN',
     1 ' SUPERMATRIX FORM ( -NPKFIL- .EQ. 1 IN -$INTGRL-). STOP')
 9998 FORMAT(/,10X,24(1H-),10X,40(1H-),
     1       /,10X,'-MP2- ENERGY CALCULATION',10X,
     2             'PROGRAM WRITTEN BY C.DANIEL AND M.DUPUIS',
     3       /,10X,24(1H-),10X,40(1H-))
 9997 FORMAT(/,' # OF CORE     ORBITALS = ',I5,
     1       /,' # OF OCC. -A- ORBITALS = ',I5,
     2       /,' # OF OCC. -B- ORBITALS = ',I5,
     3       /,' # OF          ORBITALS = ',I5,
     4       /,' # OF  BASIS  FUNCTIONS = ',I5)
 9996 FORMAT(' THERE ARE NO VIRTUAL ORBITALS. STOP')
      END

      SUBROUTINE MP2NRG
      IMPLICIT REAL*8 (A-H,O-Z)
      LOGICAL SOME,OUT,DBUG
      COMMON/OPTNS/TIMLIM,VIBSIZ,NOPT,NVIB,IREST2,IREST3,
     &            LADAPT,LSKIP,NPRINT,ITOL,ICUT,NORMF,NORMP,
     &            IREST,NREC,INTLOC,IST,JST,KST,LST,IR,IW,
     &            IBLKD,IFILD,IBLKS,IFILS,IBLKM,IFILM,MBLKM,
     &            NOTAPE(3),IBLK(3),LBLK(3),ILOW,NCOORB,NSA,
     &            MINVEC,DIISE,DIISD,MINULL,
     &            ICONV,NRUNS,NMUL(2),IPOSM,LDA(24),ISEX(24),
     &            TTOT1
      COMMON/SQFILE/IJK,IPK
      COMMON/DAFILE/IDAF,NAV,IODA(255)
      COMMON/INTFIL/NINTMX
      COMMON/QMTOPT/QMTTOL,NQMT
      COMMON/ENRGHF/ENUC,ESCF,EELEC
      COMMON/ENRGMP/EMP2,EMP3,EMP4
      COMMON/MP2PAR/NCO,NOA,NOB,NO,NBF
      COMMON/MP2MEM/NWORD
      COMMON/MP2PRT/SOME,OUT,DBUG
      COMMON/MP2DAF/IDAF20,NAV20
      COMMON/IJPAIR/IA(1)
      COMMON/SCM/X(1)
      DIMENSION ERRMSG(3)
      DATA ERRMSG /'PROGRAM ','STOP IN ','-MP2NRG-'/
      parameter (ZERO=0.0D+00)

      NOC =NOA-NCO
      NVIR=NO -NOA
      NORB=NO -NCO
      NBF2=(NBF*(NBF+1))/2
      NBF3= NBF* NBF
C
C     ----- READ MO'S AND E'S -----
C
      I00=1
      I01=I00+NBF*NBF
      I10=I01+NOC*NBF
      I20=I10+NVIR*NBF
      I21=I20+NBF
      I22=I21+NBF
      I23=I22+NBF
      I30=I23+NBF
C
C     ----- SET UP TRANSPOSE MATRIX OF MO COEFFICIENTS -----
C
      CALL DAREAD(IDAF,IODA,X(I30),NBF3,15)
      CALL DAREAD(IDAF,IODA,X(I20),NBF ,17)
      DO 10 J=1,NORB
      X(J           +I20-1)=X(J         +NCO +I20-1)
      DO 10 I=1,NBF
   10 X(I+ NBF*(J-1)+I00-1)=X(I+NBF*(J-1+NCO)+I30-1)
      DO 20 J=1,NOC
      DO 20 I=1,NBF
   20 X(J+NOC *(I-1)+I01-1)=X(I+NBF*(J-1+NCO)+I30-1)
      DO 30 J=1,NVIR
      DO 30 I=1,NBF
   30 X(J+NVIR*(I-1)+I10-1)=X(I+NBF*(J-1+NOA)+I30-1)
C
C     ----- ASSIGN -IRREP- LABEL TO MO'S -----
C
      I40=I30+NBF2
      I50=I40+NBF3
      I60=I50+NBF
      CALL DAREAD(IDAF,IODA,X(I30),NBF2,12)
      CALL DAREAD(IDAF,IODA,X(I40),NBF3,13)
      CALL MP2SYM(X(I21),X(I22),X(I23),
     1            X(I40),X(I30),X(I00),X(I50),IA,NQMT,NBF,NORB,NBF)
      IF(OUT) WRITE(IW,9995)
      IF(OUT) CALL   PRES(       X(I20),X(I21),NORB)
      IF(OUT) WRITE(IW,9994)
      IF(OUT) CALL PREVLS(X(I00),X(I20),X(I21),NORB,NBF,NBF)
C
C     ----- TRANSFORM -AO- INTEGRALS -----
C            PROCESS SYMMETRY DATA
C            EVALUATE -MP2- ENERGY
C
      NDIM=MAX0(NBF2,NBF*NOC)
      I40=I30+NINTMX
      I50=I40+NINTMX
      I60=I50+NBF*NBF
      I70=I60+NBF*NBF
      I80=I70+NOC*NOC
      I90=I80+NOC
      I91=I90+NOC*NDIM*NBF
      NEED=I91-1
      IF(SOME) WRITE(IW,9999) NEED,NWORD
      IF(NEED.GT.NWORD) GO TO 100
C
C     ----- IN CORE ALGORITHM -----
C
      IF(SOME) WRITE(IW,9998)
C
      CALL MP2C(X(I00),X(I01),X(I10),X(I90),X(I30),X(I40),X(I50),X(I60),
     1 IA,NBF,NBF2,NBF3,NOC,NVIR,NORB,NDIM,IJK)
      CALL MP2CS(X(I90),X(I22),X(I23),
     1 NBF,NOC,NVIR,NORB,NDIM)
      CALL MP2CE(X(I20),X(I90),X(I70),X(I80),E2,
     1 NBF,NOC,NVIR,NORB,NDIM)
C
      GO TO 200
  100 CONTINUE
C
C     ----- OUT-OF-CORE ALGORITHM -----
C
      IF(SOME) WRITE(IW,9997)
C
      NEED=I90-1
      NFIX=NEED+NVIR*NOC
      LEFT=NWORD-NFIX
      NMIN=NDIM*NOC
      IF(LEFT.LT.NMIN) GO TO 300
      LPASS=LEFT/NMIN
      NPASS=(NBF-1)/LPASS+1
      NEED=NFIX+NOC*NDIM*LPASS
      IF(SOME) WRITE(IW,9996) LPASS,NPASS,NEED
C
      I90=I80+NOC
      I91=I90+NOC*NDIM*LPASS
      I92=I91+NVIR*NOC
C
C     ----- OPEN -IDAF20- FOR TEMPORARY STORAGE -----
C
      IDAF20=20
      NAV20 =0
      NDAR20=NVIR*NOC
      CALL DAOPEN(IDAF20,X(I91),NAV20,NDAR20)
C
      CALL MP2A(X(I00),X(I01),X(I10),X(I90),X(I30),X(I40),X(I50),X(I60),
     1 IA,NBF,NBF2,NBF3,NOC,NVIR,NORB,NDIM,IJK,LPASS,NPASS,X(I91))
      CALL MP2AS(X(I90),X(I22),X(I23),
     1 NBF,NOC,NVIR,NORB,NDIM,X(I91))
      CALL MP2AE(X(I20),X(I90),X(I70),X(I80),E2,
     1 NBF,NOC,NVIR,NORB,NDIM,X(I91))
C
C     ----- CLOSE -IDAF20- -----
C
      CALL DACLOS(IDAF20,NAV20,IW)
      CALL DARTRN(IDAF20)
  200 CONTINUE
C
C     ----- PRINT ENERGY DATA -----
C
      EHF =ESCF
      EMP2=EHF+E2
      WRITE(IW,8888) EHF,E2
      WRITE(IW,8887) EMP2
      RETURN
C
  300 CONTINUE
      WRITE(IW,7777) NWORD,NMIN
      CALL HNDERR(3,ERRMSG)
      RETURN
 9999 FORMAT(/,' NUMBER OF WORDS NEEDED    = ',I10,
     1         ' FOR - IN CORE - MP2'         ,/,
     2         ' NUMBER OF WORDS AVAILABLE = ',I10)
 9998 FORMAT(/,' ----- IN CORE -MP2- CALCULATION -----')
 9997 FORMAT(/,' ----- OUT-OF-CORE -MP2- CALCULATION -----')
 9996 FORMAT(  '       NUMBER OF BASIS FUNCTIONS / PASS = ',I10,/,
     1         '       NUMBER OF PASSES                 = ',I10,/,
     2         '       NUMBER OF WORDS USED             = ',I10)
 9995 FORMAT(/,'       ORBITAL ENERGIES',
     1       /,'       ----------------')
 9994 FORMAT(/,'       MOLECULAR ORBITALS',
     1       /,'       ------------------')
 8888 FORMAT(/,' ----- E(HF) = ',F16.9,
     1       /,' ----- E( 2) = ',F16.9)
 8887 FORMAT(/,' ----- EMP2  = ',F16.9)
 7777 FORMAT(/,' MEMORY SIZE ( = ',I10,' ) IS SMALLER THAN THE'
     1         ' MINIMUM SIZE REQUIRED ( = ',I10,' ). STOP')
      END
*@PROCESS VECTOR(LEVEL(2),REPORT)
      SUBROUTINE MP2A(C,COT,CVT,XPQRJ,XX,IX,X,Y,IA,
     1 NBF,NBF2,NBF3,NOC,NVIR,NORB,NDIM,NFT,NUM,NPASS,IODA20)
      IMPLICIT REAL*8 (A-H,O-Z)
      LOGICAL SOME,OUT,DBUG
      COMMON/MP2DAF/IDAF20,NAV20
      COMMON/MP2PRT/SOME,OUT,DBUG
      COMMON/OPTNS/TIMLIM,VIBSIZ,NOPT,NVIB,IREST2,IREST3,
     &            LADAPT,LSKIP,NPRINT,ITOL,ICUT,NORMF,NORMP,
     &            IREST,NREC,INTLOC,IST,JST,KST,LST,IR,IW,
     &            IBLKD,IFILD,IBLKS,IFILS,IBLKM,IFILM,MBLKM,
     &            NOTAPE(3),IBLK(3),LBLK(3),ILOW,NCOORB,NSA,
     &            MINVEC,DIISE,DIISD,MINULL,
     &            ICONV,NRUNS,NMUL(2),IPOSM,LDA(24),ISEX(24),
     &            TTOT1
      DIMENSION C(NBF,1),COT(NOC,1),CVT(NVIR,1)
      DIMENSION XPQRJ(NOC,NDIM,NUM)
      DIMENSION X(NBF,1),Y(NBF,1)
      DIMENSION XX(1),IX(1),IA(1)
      DIMENSION IODA20(1)
      parameter (ZERO=0.0D+00)

      TIM1 =ZERO
      TIM23=ZERO
      TIM4 =ZERO
C
C     ----- LOOP OVER PASSES OF -R- -----
C
      DO 100 IPASS=1,NPASS
      MINR=NUM*(IPASS-1)+1
      MAXR=NUM*(IPASS-1)+NUM
      IF(MAXR.GT.NBF) MAXR=NBF
      NUMR=MAXR-MINR+1
C
      CALL SECOND(T0)
C
C     ----- FORM (PQ/RJ) = SUM OVER S OF (PQ/RS) * C(S,J) -----
C
      CALL MP2A1(NFT,XPQRJ,XX,IX,IA,COT,NBF,NBF2,NOC,NDIM,
     1           MINR,MAXR,NUMR)
C
      CALL SECOND(T1)
      TIM1=TIM1+(T1-T0)
C
C     ----- FORM (PI/RJ) , AND THEN (AI/RJ) -----
C
      CALL MP2C23(XPQRJ,X,Y,C,CVT,NBF,NVIR,NOC,NDIM,NUMR)
C
      CALL SECOND(T2)
      TIM23=TIM23+(T2-T1)
C
C     ----- FORM (AI/BJ) -----
C
      MAI=0
      DO 40 MA=1,NVIR
      DO 40 MI=1,NOC
      MAI=MAI+1
C
      DO 10 MJ=1,NOC
      DO 10 MR=1,NUMR
   10 X(MR,MJ)=XPQRJ(MJ,MAI,MR)
C
      CALL MXM(CVT(1,MINR),NVIR,X,NBF,Y,NBF,MA,NUMR,NOC)
C
      IF(IPASS.EQ.1) GO TO 30
      CALL DAREAD(IDAF20,IODA20,X,NBF*NOC,MAI)
      DO 20 MJ=1,NOC
      DO 20 MB=1,MA
   20 Y(MB,MJ)=Y(MB,MJ)+X(MB,MJ)
   30 CALL DAWRIT(IDAF20,IODA20,Y,NBF*NOC,MAI,NAV20)
C
   40 CONTINUE
C
      CALL SECOND(T3)
      TIM4=TIM4+(T3-T2)
C
C     ----- END OF LOOP OVER PASSES -----
C
  100 CONTINUE
      IF(SOME) WRITE(IW,9999) TIM1,TIM23,TIM4
      RETURN
 9999 FORMAT(' TIME FOR -STEP 1   - = ',F10.3,/,
     1       ' TIME FOR -STEP 2+3 - = ',F10.3,/,
     2       ' TIME FOR -STEP 4   - = ',F10.3)
      END
*@PROCESS VECTOR(LEVEL(2),REPORT)
      SUBROUTINE MP2A1(NFT,XPQRJ,XX,IX,IA,COT,NBF,NBF2,NOC,NDIM,
     1                 MINR,MAXR,NUMR)
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER SHIFTR
      LOGICAL SKIPP,SKIPQ,SKIPR,SKIPS
      COMMON/OPTNS/TIMLIM,VIBSIZ,NOPT,NVIB,IREST2,IREST3,
     &            LADAPT,LSKIP,NPRINT,ITOL,ICUT,NORMF,NORMP,
     &            IREST,NREC,INTLOC,IST,JST,KST,LST,IR,IW,
     &            IBLKD,IFILD,IBLKS,IFILS,IBLKM,IFILM,MBLKM,
     &            NOTAPE(3),IBLK(3),LBLK(3),ILOW,NCOORB,NSA,
     &            MINVEC,DIISE,DIISD,MINULL,
     &            ICONV,NRUNS,NMUL(2),IPOSM,LDA(24),ISEX(24),
     &            TTOT1
      COMMON/INTFIL/NINTMX
      DIMENSION COT(NOC,1)
      DIMENSION XPQRJ(NOC,NDIM,NBF)
      DIMENSION XX(1),IX(1),IA(1)
      DIMENSION ERRMSG(3)
      DATA ERRMSG /'PROGRAM ','STOP IN ','- MP2A1-'/
      parameter (ZERO=0.0D+00)
C
      SHIFTR(IARG,IBIT)=ISHFT(IARG,-IBIT)
      LAND(IARG1,IARG2)=IAND(IARG1,IARG2)
      MASK1(IARG)=2**IARG-1
      MASK2(IARG)=2**IARG-1
      IWORD1(IARG)=LAND(SHIFTR(IARG,24),MASK1(8))
      IWORD2(IARG)=LAND(SHIFTR(IARG,16),MASK1(8))
      IWORD3(IARG)=LAND(SHIFTR(IARG, 8),MASK1(8))
      IWORD4(IARG)=LAND(SHIFTR(IARG, 0),MASK1(8))
C
      DO 10 MR =1,NUMR
      DO 10 MPQ=1,NBF2
      DO 10 MJ =1,NOC
   10 XPQRJ(MJ,MPQ,MR)=ZERO
C
C     ----- FORM (PQ/RJ) = SUM OVER S OF (PQ/RS) * C(S,J) -----
C
      CALL REWFIL(NFT)
  100 CALL PREAD(NFT,XX,IX,NXX,NINTMX)
      IF(NXX.EQ.0) GO TO 200
      NINT=IABS(NXX)
      IF(NINT.LE.NINTMX) GO TO 105
      WRITE(IW,9999)
      CALL HNDERR(3,ERRMSG)
  105 CONTINUE
C
      DO 150 M=1,NINT
      VAL=XX(M)
      VAL1=VAL
      VAL2=VAL
      VAL3=VAL
      VAL4=VAL
      LABEL=IX(M)
      MP=IWORD1(LABEL)
      MQ=IWORD2(LABEL)
      MR=IWORD3(LABEL)
      MS=IWORD4(LABEL)
      SKIPS=MS.LT.MINR.OR.MS.GT.MAXR
      SKIPR=MR.LT.MINR.OR.MR.GT.MAXR
      SKIPQ=MQ.LT.MINR.OR.MQ.GT.MAXR
      SKIPP=MP.LT.MINR.OR.MP.GT.MAXR
      IF(SKIPS.AND.SKIPR.AND.SKIPQ.AND.SKIPP) GO TO 150
      MPQ=IA(MP)+MQ
      MRS=IA(MR)+MS
      IF(MR.NE.MS) GO TO 120
      IF(MP.NE.MQ) GO TO 110
C
C     ----- (PP/RR) , (PP/PP) -----
C
      VAL1=VAL1+VAL1
      VAL2=VAL1
      VAL3=VAL1
      VAL4=VAL1
      GO TO 130
  110 CONTINUE
C
C     ----- (PQ/RR) -----
C
      VAL3=VAL3+VAL3
      VAL4=VAL3
      GO TO 130
  120 CONTINUE
      IF(MP.NE.MQ) GO TO 130
C
C     ----- (PP/RS) -----
C
      VAL1=VAL1+VAL1
      VAL2=VAL1
  130 CONTINUE
C
      IF(SKIPR) GO TO 141
      DO 140 MJ=1,NOC
  140 XPQRJ(MJ,MPQ,MR-MINR+1)=XPQRJ(MJ,MPQ,MR-MINR+1)+VAL1*COT(MJ,MS)
  141 IF(SKIPS) GO TO 143
      DO 142 MJ=1,NOC
  142 XPQRJ(MJ,MPQ,MS-MINR+1)=XPQRJ(MJ,MPQ,MS-MINR+1)+VAL2*COT(MJ,MR)
  143 IF(SKIPP) GO TO 145
      DO 144 MJ=1,NOC
  144 XPQRJ(MJ,MRS,MP-MINR+1)=XPQRJ(MJ,MRS,MP-MINR+1)+VAL3*COT(MJ,MQ)
  145 IF(SKIPQ) GO TO 150
      DO 146 MJ=1,NOC
  146 XPQRJ(MJ,MRS,MQ-MINR+1)=XPQRJ(MJ,MRS,MQ-MINR+1)+VAL4*COT(MJ,MP)
C
  150 CONTINUE
      IF(NXX.GT.0) GO TO 100
C
  200 CONTINUE
      RETURN
 9999 FORMAT(' INCONSISTENT FILE PARAMETERS IN -MP2A1-. STOP')
      END
      SUBROUTINE MP2AE(E,AIBJ,EIJ,EI,E2,
     1 NBF,NOC,NVIR,NORB,NDIM,IODA20)
      IMPLICIT REAL*8 (A-H,O-Z)
      LOGICAL SOME,OUT,DBUG
      COMMON/MP2DAF/IDAF20,NAV20
      COMMON/MP2PRT/SOME,OUT,DBUG
      COMMON/OPTNS/TIMLIM,VIBSIZ,NOPT,NVIB,IREST2,IREST3,
     &            LADAPT,LSKIP,NPRINT,ITOL,ICUT,NORMF,NORMP,
     &            IREST,NREC,INTLOC,IST,JST,KST,LST,IR,IW,
     &            IBLKD,IFILD,IBLKS,IFILS,IBLKM,IFILM,MBLKM,
     &            NOTAPE(3),IBLK(3),LBLK(3),ILOW,NCOORB,NSA,
     &            MINVEC,DIISE,DIISD,MINULL,
     &            ICONV,NRUNS,NMUL(2),IPOSM,LDA(24),ISEX(24),
     &            TTOT1
      DIMENSION E(1)
      DIMENSION AIBJ(NBF,NOC,NOC)
      DIMENSION EIJ(NOC,NOC),EI(NOC)
      DIMENSION IODA20(1)
      parameter (ZERO=0.0D+00)
      DATA PT5  /0.5D+00/
C
C     ----- CALCULATE E(2) AND ORBITAL-PAIR CONTRIBUTIONS TO E(2) -----
C
      E2=ZERO
      DO 10 MJ=1,NOC
      DO 10 MI=1,NOC
   10 EIJ(MI,MJ)=ZERO
C
      DO 50 MA=1,NVIR
      DO 20 MI=1,NOC
      MAI=MI+NOC*(MA-1)
   20 CALL DAREAD(IDAF20,IODA20,AIBJ(1,1,MI),NBF*NOC,MAI)
      DO 40 MI=1,NOC
      DO 30 MB=1,MA
      MAX=NOC
      IF(MB.EQ.MA) MAX=MI
      DO 30 MJ=1,MAX
      XAIBJ=AIBJ(MB,MJ,MI)
      XAJBI=AIBJ(MB,MI,MJ)
      DAIBJ=E(MA+NOC)+E(MB+NOC)-E(MI)-E(MJ)
      EAIBJ=XAIBJ*(XAIBJ+XAIBJ-XAJBI)/DAIBJ
      IF(MB.NE.MA.OR.MJ.NE.MI) EAIBJ=EAIBJ+EAIBJ
      E2=E2-EAIBJ
      IF(MI.EQ.MJ) EAIBJ=EAIBJ*PT5
      EIJ(MI,MJ)=EIJ(MI,MJ)-EAIBJ
      EIJ(MJ,MI)=EIJ(MJ,MI)-EAIBJ
   30 CONTINUE
   40 CONTINUE
   50 CONTINUE
C
C     ----- PERFORM ENERGY CHECKS -----
C
      DO 70 MI=1,NOC
      DUM=ZERO
      DO 60 MJ=1,NOC
      E2IJ=EIJ(MI,MJ)
      IF(MJ.NE.MI) E2IJ=E2IJ*PT5
   60 DUM=DUM+E2IJ
   70 EI(MI)=DUM
      E2DUM=ZERO
      DO 80 MI=1,NOC
   80 E2DUM=E2DUM+EI(MI)
C
      IF(.NOT.OUT) RETURN
      WRITE(IW,9999) E2
      WRITE(IW,9998) E2DUM
      WRITE(IW,9997)
      CALL PRSQ(EIJ,NOC,NOC,NOC)
      WRITE(IW,9996)
      CALL PRSQ(EI ,  1,NOC,  1)
      RETURN
 9999 FORMAT(/,'                                 E(2) = ',F16.9)
 9998 FORMAT(/,' SUM OF ORBITAL CONTRIBUTIONS TO E(2) = ',F16.9)
 9997 FORMAT(/,'   ORBITAL-PAIR CONTRIBUTIONS TO E(2)',/,3X,34(1H-))
 9996 FORMAT(/,'        ORBITAL CONTRIBUTIONS TO E(2)',/,8X,29(1H-))
      END
      SUBROUTINE MP2AS(AIBJ,MOSIRP,MOSDEG,
     1 NBF,NOC,NVIR,NORB,NDIM,IODA20)
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/MP2DAF/IDAF20,NAV20
      COMMON/SYMMUL/NIJREP(14,14),IJREP(2,14,14,14)
      COMMON/SYMBLK/NIRRED
      DIMENSION AIBJ(NBF,NOC,NOC)
      DIMENSION MOSIRP(1),MOSDEG(1)
      DIMENSION IODA20(1)
      parameter (ZERO=0.0D+00)
C
      IF(NIRRED.EQ.1) RETURN
C
C     ----- SIFT INTEGRALS FOR SYMMETRY ZEROES -----
C
      DO 50 MA=1,NVIR
      DO 10 MI=1,NOC
      MAI=MI+NOC*(MA-1)
   10 CALL DAREAD(IDAF20,IODA20,AIBJ(1,1,MI),NBF*NOC,MAI)
      DO 30 MI=1,NOC
      DO 20 MB=1,MA
      MAX=NOC
      IF(MB.EQ.MA) MAX=MI
      DO 20 MJ=1,MAX
      IAREP=IJREP(2,1,MOSIRP(MA+NOC),MOSIRP(MI))
      JBREP=IJREP(2,1,MOSIRP(MB+NOC),MOSIRP(MJ))
      JAREP=IJREP(2,1,MOSIRP(MA+NOC),MOSIRP(MJ))
      IBREP=IJREP(2,1,MOSIRP(MB+NOC),MOSIRP(MI))
      IF(JBREP.NE.IAREP) AIBJ(MB,MJ,MI)=ZERO
      IF(IBREP.NE.JAREP) AIBJ(MB,MI,MJ)=ZERO
   20 CONTINUE
   30 CONTINUE
      DO 40 MI=1,NOC
      MAI=MI+NOC*(MA-1)
   40 CALL DAWRIT(IDAF20,IODA20,AIBJ(1,1,MI),NBF*NOC,MAI,NAV20)
   50 CONTINUE
      RETURN
      END
      SUBROUTINE MP2C(C,COT,CVT,XPQRJ,XX,IX,X,Y,IA,
     1 NBF,NBF2,NBF3,NOC,NVIR,NORB,NDIM,NFT)
      IMPLICIT REAL*8 (A-H,O-Z)
      LOGICAL SOME,OUT,DBUG
      COMMON/MP2PRT/SOME,OUT,DBUG
      COMMON/OPTNS/TIMLIM,VIBSIZ,NOPT,NVIB,IREST2,IREST3,
     &            LADAPT,LSKIP,NPRINT,ITOL,ICUT,NORMF,NORMP,
     &            IREST,NREC,INTLOC,IST,JST,KST,LST,IR,IW,
     &            IBLKD,IFILD,IBLKS,IFILS,IBLKM,IFILM,MBLKM,
     &            NOTAPE(3),IBLK(3),LBLK(3),ILOW,NCOORB,NSA,
     &            MINVEC,DIISE,DIISD,MINULL,
     &            ICONV,NRUNS,NMUL(2),IPOSM,LDA(24),ISEX(24),
     &            TTOT1
      DIMENSION C(NBF,1),COT(NOC,1),CVT(NVIR,1)
      DIMENSION XPQRJ(NOC,NDIM,NBF)
      DIMENSION X(NBF,1),Y(NBF,1)
      DIMENSION XX(1),IX(1),IA(1)
C
      CALL SECOND(T0)
C
C     ----- FORM (PQ/RJ) = SUM OVER S OF (PQ/RS) * C(S,J) -----
C
      CALL MP2C1(NFT,XPQRJ,XX,IX,IA,COT,NBF,NBF2,NOC,NDIM)
C
      CALL SECOND(T1)
      TIM1 =T1-T0
C
C     ----- FORM (PI/RJ) , AND THEN (AI/RJ) -----
C
      CALL MP2C23(XPQRJ,X,Y,C,CVT,NBF,NVIR,NOC,NDIM,NBF)
C
C
      CALL SECOND(T2)
      TIM23=T2-T1
C
C     ----- FORM (AI/BJ) -----
C
      CALL MP2C4(XPQRJ,X,Y,CVT,NVIR,NBF,NOC,NDIM)
C
      CALL SECOND(T3)
      TIM4 =T3-T2
      IF(SOME) WRITE(IW,9999) TIM1,TIM23,TIM4
C
      RETURN
C
 9999 FORMAT(' TIME FOR -STEP 1   - = ',F10.3,/,
     1       ' TIME FOR -STEP 2+3 - = ',F10.3,/,
     2       ' TIME FOR -STEP 4   - = ',F10.3)
      END
*@PROCESS VECTOR(LEVEL(2),REPORT)
      SUBROUTINE MP2C1(NFT,XPQRJ,XX,IX,IA,COT,NBF,NBF2,NOC,NDIM)
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER SHIFTR
      COMMON/OPTNS/TIMLIM,VIBSIZ,NOPT,NVIB,IREST2,IREST3,
     &            LADAPT,LSKIP,NPRINT,ITOL,ICUT,NORMF,NORMP,
     &            IREST,NREC,INTLOC,IST,JST,KST,LST,IR,IW,
     &            IBLKD,IFILD,IBLKS,IFILS,IBLKM,IFILM,MBLKM,
     &            NOTAPE(3),IBLK(3),LBLK(3),ILOW,NCOORB,NSA,
     &            MINVEC,DIISE,DIISD,MINULL,
     &            ICONV,NRUNS,NMUL(2),IPOSM,LDA(24),ISEX(24),
     &            TTOT1
      COMMON/INTFIL/NINTMX
      DIMENSION COT(NOC,1)
      DIMENSION XPQRJ(NOC,NDIM,NBF)
      DIMENSION XX(1),IX(1),IA(1)
      DIMENSION ERRMSG(3)
      DATA ERRMSG /'PROGRAM ','STOP IN ','- MP2C1-'/
      parameter (ZERO=0.0D+00)
C
      SHIFTR(IARG,IBIT)=ISHFT(IARG,-IBIT)
      LAND(IARG1,IARG2)=IAND(IARG1,IARG2)
      MASK1(IARG)=2**IARG-1
      MASK2(IARG)=2**IARG-1
      IWORD1(IARG)=LAND(SHIFTR(IARG,24),MASK1(8))
      IWORD2(IARG)=LAND(SHIFTR(IARG,16),MASK1(8))
      IWORD3(IARG)=LAND(SHIFTR(IARG, 8),MASK1(8))
      IWORD4(IARG)=LAND(SHIFTR(IARG, 0),MASK1(8))
C
      DO 10 MR =1,NBF
      DO 10 MPQ=1,NBF2
      DO 10 MJ =1,NOC
   10 XPQRJ(MJ,MPQ,MR)=ZERO
C
C     ----- FORM (PQ/RJ) = SUM OVER S OF (PQ/RS) * C(S,J) -----
C
      CALL REWFIL(NFT)
  100 CALL PREAD(NFT,XX,IX,NXX,NINTMX)
      IF(NXX.EQ.0) GO TO 200
      NINT=IABS(NXX)
      IF(NINT.LE.NINTMX) GO TO 105
      WRITE(IW,9999)
      CALL HNDERR(3,ERRMSG)
  105 CONTINUE
C
      DO 150 M=1,NINT
      VAL=XX(M)
      VAL1=VAL
      VAL2=VAL
      VAL3=VAL
      VAL4=VAL
      LABEL=IX(M)
      MP=IWORD1(LABEL)
      MQ=IWORD2(LABEL)
      MR=IWORD3(LABEL)
      MS=IWORD4(LABEL)
      MPQ=IA(MP)+MQ
      MRS=IA(MR)+MS
      IF(MR.NE.MS) GO TO 120
      IF(MP.NE.MQ) GO TO 110
C
C     ----- (PP/RR) , (PP/PP) -----
C
      VAL1=VAL1+VAL1
      VAL2=VAL1
      VAL3=VAL1
      VAL4=VAL1
      GO TO 130
  110 CONTINUE
C
C     ----- (PQ/RR) -----
C
      VAL3=VAL3+VAL3
      VAL4=VAL3
      GO TO 130
  120 CONTINUE
      IF(MP.NE.MQ) GO TO 130
C
C     ----- (PP/RS) -----
C
      VAL1=VAL1+VAL1
      VAL2=VAL1
  130 CONTINUE
C
      DO 140 MJ=1,NOC
      XPQRJ(MJ,MPQ,MR)=XPQRJ(MJ,MPQ,MR)+VAL1*COT(MJ,MS)
      XPQRJ(MJ,MPQ,MS)=XPQRJ(MJ,MPQ,MS)+VAL2*COT(MJ,MR)
      XPQRJ(MJ,MRS,MP)=XPQRJ(MJ,MRS,MP)+VAL3*COT(MJ,MQ)
  140 XPQRJ(MJ,MRS,MQ)=XPQRJ(MJ,MRS,MQ)+VAL4*COT(MJ,MP)
C
  150 CONTINUE
      IF(NXX.GT.0) GO TO 100
C
  200 CONTINUE
      RETURN
 9999 FORMAT(' INCONSISTENT FILE PARAMETERS IN -MP2C1-. STOP')
      END
      SUBROUTINE MP2C23(XPQRJ,X,Y,C,CVT,NBF,NVIR,NOC,NDIM,NUMR)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION C(NBF,1),CVT(NVIR,1)
      DIMENSION XPQRJ(NOC,NDIM,NBF)
      DIMENSION X(NBF,1),Y(NBF,1)
C
C     ----- FORM (PI/RJ) , AND THEN (AI/RJ) -----
C
      DO 30 MR=1,NUMR
      DO 30 MJ=1,NOC
C
      MPQ=0
      DO 10 MP=1,NBF
      DO 10 MQ=1,MP
      MPQ=MPQ+1
      X(MP,MQ)=XPQRJ(MJ,MPQ,MR)
   10 X(MQ,MP)=XPQRJ(MJ,MPQ,MR)
C
      CALL MXM(  X, NBF,C,NBF,Y,NBF, NBF,NBF,NOC)
      CALL MXM(CVT,NVIR,Y,NBF,X,NBF,NVIR,NBF,NOC)
C
      MAI=0
      DO 20 MA=1,NVIR
      DO 20 MI=1,NOC
      MAI=MAI+1
   20 XPQRJ(MJ,MAI,MR)=X(MA,MI)
C
   30 CONTINUE
      RETURN
      END
      SUBROUTINE MP2C4(XPQRJ,X,Y,CVT,NVIR,NBF,NOC,NDIM)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION C(NBF,1),CVT(NVIR,1)
      DIMENSION XPQRJ(NOC,NDIM,NBF)
      DIMENSION X(NBF,1),Y(NBF,1)
C
C     ----- FORM (AI/BJ) -----
C
      MAI=0
      DO 30 MA=1,NVIR
      DO 30 MI=1,NOC
      MAI=MAI+1
C
      DO 10 MJ=1,NOC
      DO 10 MR=1,NBF
   10 X(MR,MJ)=XPQRJ(MJ,MAI,MR)
C
      CALL MXM(CVT,NVIR,X,NBF,Y,NBF,  MA,NBF,NOC)
C
      DO 20 MB=1,MA
      DO 20 MJ=1,NOC
      XPQRJ(MJ,MAI,MB)=Y(MB,MJ)
   20 CONTINUE
C
   30 CONTINUE
      RETURN
      END
      SUBROUTINE MP2CE(E,AIBJ,EIJ,EI,E2,NBF,NOC,NVIR,NORB,NDIM)
      IMPLICIT REAL*8 (A-H,O-Z)
      LOGICAL SOME,OUT,DBUG
      COMMON/MP2PRT/SOME,OUT,DBUG
      COMMON/OPTNS/TIMLIM,VIBSIZ,NOPT,NVIB,IREST2,IREST3,
     &            LADAPT,LSKIP,NPRINT,ITOL,ICUT,NORMF,NORMP,
     &            IREST,NREC,INTLOC,IST,JST,KST,LST,IR,IW,
     &            IBLKD,IFILD,IBLKS,IFILS,IBLKM,IFILM,MBLKM,
     &            NOTAPE(3),IBLK(3),LBLK(3),ILOW,NCOORB,NSA,
     &            MINVEC,DIISE,DIISD,MINULL,
     &            ICONV,NRUNS,NMUL(2),IPOSM,LDA(24),ISEX(24),
     &            TTOT1
      DIMENSION E(1)
      DIMENSION AIBJ(NOC,NDIM,NBF)
      DIMENSION EIJ(NOC,NOC),EI(NOC)
      parameter (ZERO=0.0D+00)
      DATA PT5  /0.5D+00/
C
C     ----- CALCULATE E(2) AND ORBITAL-PAIR CONTRIBUTIONS TO E(2) -----
C
      E2=ZERO
      DO 10 MJ=1,NOC
      DO 10 MI=1,NOC
   10 EIJ(MI,MJ)=ZERO
C
      DO 30 MA=1,NVIR
      DO 30 MI=1,NOC
      MAI=MI+NOC*(MA-1)
      DO 20 MB=1,MA
      MAX=NOC
      IF(MB.EQ.MA) MAX=MI
      DO 20 MJ=1,MAX
      MAJ=MJ+NOC*(MA-1)
      XAIBJ=AIBJ(MJ,MAI,MB)
      XAJBI=AIBJ(MI,MAJ,MB)
      DAIBJ=E(MA+NOC)+E(MB+NOC)-E(MI)-E(MJ)
      EAIBJ=XAIBJ*(XAIBJ+XAIBJ-XAJBI)/DAIBJ
      IF(MB.NE.MA.OR.MJ.NE.MI) EAIBJ=EAIBJ+EAIBJ
      E2=E2-EAIBJ
      IF(MI.EQ.MJ) EAIBJ=EAIBJ*PT5
      EIJ(MI,MJ)=EIJ(MI,MJ)-EAIBJ
      EIJ(MJ,MI)=EIJ(MJ,MI)-EAIBJ
   20 CONTINUE
   30 CONTINUE
C
C     ----- PERFORM ENERGY CHECKS -----
C
      DO 50 MI=1,NOC
      DUM=ZERO
      DO 40 MJ=1,NOC
      E2IJ=EIJ(MI,MJ)
      IF(MJ.NE.MI) E2IJ=E2IJ*PT5
   40 DUM=DUM+E2IJ
   50 EI(MI)=DUM
      E2DUM=ZERO
      DO 60 MI=1,NOC
   60 E2DUM=E2DUM+EI(MI)
C
      IF(.NOT.OUT) RETURN
      WRITE(IW,9999) E2
      WRITE(IW,9998) E2DUM
      WRITE(IW,9997)
      CALL PRSQ(EIJ,NOC,NOC,NOC)
      WRITE(IW,9996)
      CALL PRSQ(EI ,  1,NOC,  1)
      RETURN
 9999 FORMAT(/,'                                 E(2) = ',F16.9)
 9998 FORMAT(/,' SUM OF ORBITAL CONTRIBUTIONS TO E(2) = ',F16.9)
 9997 FORMAT(/,'   ORBITAL-PAIR CONTRIBUTIONS TO E(2)',/,3X,34(1H-))
 9996 FORMAT(/,'        ORBITAL CONTRIBUTIONS TO E(2)',/,8X,29(1H-))
      END
      SUBROUTINE MP2CS(AIBJ,MOSIRP,MOSDEG,NBF,NOC,NVIR,NORB,NDIM)
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/SYMMUL/NIJREP(14,14),IJREP(2,14,14,14)
      COMMON/SYMBLK/NIRRED
      DIMENSION AIBJ(NOC,NDIM,NBF)
      DIMENSION MOSIRP(1),MOSDEG(1)
      parameter (ZERO=0.0D+00)
C
      IF(NIRRED.EQ.1) RETURN
C
C     ----- SIFT INTEGRALS FOR SYMMETRY ZEROES -----
C
      DO 20 MA=1,NVIR
      DO 20 MI=1,NOC
      MAI=MI+NOC*(MA-1)
      DO 10 MB=1,MA
      MAX=NOC
      IF(MB.EQ.MA) MAX=MI
      DO 10 MJ=1,MAX
      MAJ=MJ+NOC*(MA-1)
      IAREP=IJREP(2,1,MOSIRP(MA+NOC),MOSIRP(MI))
      JBREP=IJREP(2,1,MOSIRP(MB+NOC),MOSIRP(MJ))
      JAREP=IJREP(2,1,MOSIRP(MA+NOC),MOSIRP(MJ))
      IBREP=IJREP(2,1,MOSIRP(MB+NOC),MOSIRP(MI))
      IF(JBREP.NE.IAREP) AIBJ(MJ,MAI,MB)=ZERO
      IF(IBREP.NE.JAREP) AIBJ(MI,MAJ,MB)=ZERO
   10 CONTINUE
   20 CONTINUE
      RETURN
      END
      SUBROUTINE MP2SYM(MOSLAB,MOSIRP,MOSDEG,Q,S,V,T,IA,L,M,N,NDIM)
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/OPTNS/TIMLIM,VIBSIZ,NOPT,NVIB,IREST2,IREST3,
     &            LADAPT,LSKIP,NPRINT,ITOL,ICUT,NORMF,NORMP,
     &            IREST,NREC,INTLOC,IST,JST,KST,LST,IR,IW,
     &            IBLKD,IFILD,IBLKS,IFILS,IBLKM,IFILM,MBLKM,
     &            NOTAPE(3),IBLK(3),LBLK(3),ILOW,NCOORB,NSA,
     &            MINVEC,DIISE,DIISD,MINULL,
     &            ICONV,NRUNS,NMUL(2),IPOSM,LDA(24),ISEX(24),
     &            TTOT1
      COMMON/SYMQMT/IRPLAB(14),IRPNUM(14),IRPDIM(14)
      COMMON/SYMBLK/NIRRED
      DIMENSION Q(NDIM,1),S(1),V(NDIM,1),T(1),IA(1)
      DIMENSION MOSLAB(1),MOSIRP(1),MOSDEG(1)
      DIMENSION ERRMSG(3)
      DATA ERRMSG /'PROGRAM ','STOP IN ','-MP2SYM-'/
      parameter (ZERO=0.0D+00)
C
C     ----- CALCULATE Q * S * V -----
C
      DO 30 I=1,L
      DO 20 J=1,M
      DUM=ZERO
      DO 10 K=1,M
      KJ=IA(MAX0(K,J))+MIN0(K,J)
   10 DUM=DUM+Q(K,I)*S(KJ)
   20 T(J)=DUM
      DO 30 J=1,M
   30 Q(J,I)=T(J)
C
      DO 60 I=1,L
      DO 50 J=1,N
      DUM=ZERO
      DO 40 K=1,M
   40 DUM=DUM+Q(K,I)*V(K,J)
   50 T(J)=DUM
      DO 60 J=1,N
   60 Q(J,I)=T(J)
C
C     ----- ASSIGN SYMMETRY TO -V- ORBITALS ----
C
      DO 150 IV=1,N
      SMAX=ZERO
      IQ=0
      DO 140 IRP=1,NIRRED
      DO 130 ID=1,IRPDIM(IRP)
      IF(IRPNUM(IRP).EQ.0) GO TO 130
      DO 120 IN=1,IRPNUM(IRP)
      IQ=IQ+1
      DUM= ABS(Q(IV,IQ))
      IF(DUM.LE.SMAX) GO TO 110
      IRPMAX=IRP
      IDMAX =ID
      SMAX  =DUM
  110 CONTINUE
  120 CONTINUE
C
  130 CONTINUE
  140 CONTINUE
      MOSLAB(IV)=IRPLAB(IRPMAX)
      MOSIRP(IV)=       IRPMAX
      MOSDEG(IV)=       IDMAX
  150 CONTINUE
C
      DO 200 IV=1,N
      IF(MOSDEG(IV).GT.1) GO TO 210
  200 CONTINUE
      RETURN
C
  210 CONTINUE
      WRITE(IW,9999)
      CALL HNDERR(3,ERRMSG)
      RETURN
 9999 FORMAT(' THIS -MP2- CODE CAN NOT HANDLE DEGENERATE',
     1       ' SYMMETRY REPRESENTATIONS YET. STOP       ')
      END
